#+SETUPFILE: ../org-templates/level-1.org
#+TITLE:     Pallet - Glossary
#+DESCRIPTION: A glossary of terms used by pallet
#+KEYWORDS: pallet domain map glossary

Pallet uses the following domain terms:

- crate :: A namespace containg crate functions
- action :: The basic unit of configuration supplied by pallet.
- action plan :: A sequence of actions that have been called by phase.
- environment :: A map that is used to pass in external data and configuration
                 together with the servers that are running for that into
                 pallet pallet.  Can be specified at various scopes.
- crate function :: A function taking a session and other arguments.  A crate
                    function can call other crate functions and actions.
- group :: A group of identically configured nodes, represented as a group-spec,
           group-spec.
- group-name :: The name used to identify a group.
- group-spec :: A group of identically configured nodes, represented as a map
                with :group-name, :count and server-spec keys.  The
                group-name is used to link running nodes to their
                configuration (via pallet.compute.Node/group-name)
- node :: A node in the compute service
- node-spec :: A specification for a node. The node-spec provides an image
               hardware, location and network template for starting new
               nodes.
- phase :: A function taking a session, and calling crate functions and actions
- parameters :: A map that is used to pass pass values between crates.  Can be
                used on same node, or across nodes.
- server :: A map used to descibe the node, image, etc of a single node running
            as part of a group. A server has the following
            keys :group-name, :node, :node-id and server-spec keys.
- server-spec :: A specification for a server. This is a map of phases and a
                 default node-spec. A server-spec has the following keys
                 :phase, :packager and node-spec keys.
- session :: A map that is used to hold state and context information for the
             duration of a lift or converge call

